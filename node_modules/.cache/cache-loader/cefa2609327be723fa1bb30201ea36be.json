{"remainingRequest":"/home/alfredo/Code/vue-formio-pdf/node_modules/babel-loader/lib/index.js!/home/alfredo/Code/vue-formio-pdf/node_modules/vue-loader/lib/selector.js?type=script&index=0!/home/alfredo/Code/vue-formio-pdf/src/components/Formio/FormioContainer.vue","dependencies":[{"path":"/home/alfredo/Code/vue-formio-pdf/src/components/Formio/FormioContainer.vue","mtime":1522141050649},{"path":"/home/alfredo/Code/vue-formio-pdf/package.json","mtime":1521932240841},{"path":"/home/alfredo/Code/vue-formio-pdf/node_modules/cache-loader/dist/cjs.js","mtime":1521810301903},{"path":"/home/alfredo/Code/vue-formio-pdf/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/home/alfredo/Code/vue-formio-pdf/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormioUtils from 'formiojs/utils';\nexport default {\n  name: 'formio-container',\n  data: function data() {\n    return {\n      skip: ['button']\n    };\n  },\n  props: ['components', 'data', 'options', 'parent'],\n  methods: {\n    show: function show(component) {\n      if (component.type == 'button' || component.type == 'hidden' || component.hidden) {\n        return false;\n      }\n\n      return true;\n    },\n    isInputComponent: function isInputComponent(component) {\n      return component.input && !component.tree;\n    },\n    isGridComponent: function isGridComponent(component) {\n      return component.type === 'datagrid' || component.type === 'editgrid';\n    },\n    isTableComponent: function isTableComponent(component) {\n      return component.type === 'table';\n    },\n    isLayoutComponent: function isLayoutComponent(component) {\n      return FormioUtils.isLayoutComponent(component);\n    },\n    isContainer: function isContainer(component) {\n      return ['container', 'fieldset'].indexOf(component.type) >= 0;\n    },\n    getValue: function getValue(component, index) {\n      var value = this.data[component.key];\n      return value && value.constructor === Array ? value[index] : value;\n    },\n    getData: function getData(component) {\n      if (component.key in this.data) {\n        return this.data[component.key];\n      }\n\n      return this.data;\n    },\n    getGridData: function getGridData(parent, child, index) {\n      var data = {};\n      data[child.key] = this.data[parent.key][index][child.key];\n      return data;\n    },\n    getGridNumRows: function getGridNumRows(component) {\n      var rows = this.data[component.key] ? this.data[component.key].length : 0;\n      return rows;\n    },\n    getGridNumCols: function getGridNumCols(component) {\n      var cols = component.components ? component.components.length : 0;\n      return cols;\n    },\n    getPanelClass: function getPanelClass(component) {\n      if (component.type === 'panel') {\n        return 'panel-'.concat(component.theme || 'default');\n      }\n\n      return '';\n    },\n    getOptions: function getOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        bordered: true\n      };\n      var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (Object.keys(obj).length === 0) {\n        return options;\n      }\n\n      for (var key in obj) {\n        options[key] = obj[key];\n      }\n\n      return options;\n    },\n    debug: function debug(obj) {\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'DEBUG-MSG';\n      console.log(key, obj);\n    }\n  },\n  computed: {}\n};",{"version":3,"sources":["FormioContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AAEA;QAEA;wBACA;;aAEA,AACA;AAFA;AAGA;2CACA;;mCAEA;wFACA;eACA;AACA;;aACA;AACA;2DACA;2CACA;AACA;yDACA;iEACA;AACA;2DACA;gCACA;AACA;6DACA;2CACA;AACA;iDACA;kEACA;AACA;kDACA;sCACA;mEACA;AACA;yCACA;sCACA;mCACA;AACA;;kBACA;AACA;4DACA;iBACA;2DACA;aACA;AACA;uDACA;8EACA;aACA;AACA;uDACA;sEACA;aACA;AACA;qDACA;sCACA;kDACA;AACA;;aACA;AACA;;AACA;;;;;yCACA;eACA;AACA;;2BACA;2BACA;AACA;;aACA;AACA;;AACA;uBACA;AACA,AACA;AA/DA;YAgEA,AACA;AAzEA","sourceRoot":"src/components/Formio","sourcesContent":["<template>\n  <div>\n    <div v-for=\"component in components\" :key=\"component.key\" v-if=\"show(component)\">\n      <formio-html v-if=\"component.type === 'htmlelement'\" :component=\"component\" :parent=\"parent\"/>\n      <formio-fieldset v-else-if=\"component.type === 'fieldset'\" :component=\"component\" :parent=\"parent\"/>\n      <div v-else-if=\"component.type === 'panel'\" class=\"panel\" :class=\"getPanelClass(component)\" >\n        <div class=\"panel-heading\">\n          {{ component.title }}\n        </div>\n        <div class=\"panel-body\">\n          <formio-container :components=\"component.components\" :data=\"getData(component)\" :options=\"getOptions(options)\" :parent=\"parent\"/>\n        </div>\n      </div>\n\n      <formio-container v-if=\"isContainer(component)\" :components=\"component.components\" :data=\"getData(component)\" :parent=\"parent\"/>\n      <formio-number v-else-if=\"component.type === 'number'\" :component=\"component\" :value=\"getValue(component, data)\" :options=\"getOptions(options)\" :parent=\"parent\" />\n      <formio-currency v-else-if=\"component.type === 'currency'\" :component=\"component\" :value=\"getValue(component, data)\" :options=\"getOptions(options)\" :parent=\"parent\"/>\n      <formio-text v-else-if=\"component.type === 'textarea' || component.type === 'textfield'\" :component=\"component\" :value=\"getValue(component, data)\" :options=\"getOptions(options)\" :parent=\"parent\"/>\n      <formio-select v-else-if=\"component.type === 'select'\" :component=\"component\" :value=\"getValue(component, data)\" :options=\"getOptions(options)\" :parent=\"parent\"/>\n      <formio-radio v-else-if=\"component.type === 'radio'\" :component=\"component\" :value=\"getValue(component, data)\" :options=\"getOptions(options)\" :parent=\"parent\"/>\n      <formio-selectboxes v-else-if=\"component.type === 'selectboxes'\" :component=\"component\" :values=\"getValue(component, data)\" :options=\"getOptions(options)\" :parent=\"parent\"/>\n      <formio-survey v-else-if=\"component.type === 'survey'\" :component=\"component\" :values=\"getValue(component, data)\" :options=\"getOptions(options)\" :parent=\"parent\"/>\n      \n      <div v-else-if=\"component.type === 'table'\">\n        <table class=\"table table-condensed\" :class=\"{'table-bordered': component.bordered, 'table-striped': component.striped}\">\n          <tbody>\n            <tr v-for=\"row in component.numRows\" :key=\"row\">\n              <td v-for=\"col in component.numCols\" :key=\"col\">\n                <formio-container :components=\"component.rows[row-1][col-1].components || []\" :data=\"getData(component.rows[row-1][col-1])\" :options=\"getOptions(options,{bordered: false})\" :parent=\"component\"/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div v-else-if=\"isGridComponent(component)\">\n        <label v-if=\"component.label && !component.hideLabel\">{{ component.label }}</label>\n        <table class=\"table table-condensed\" :class=\"{'table-bordered': component.bordered, 'table-striped': component.striped}\">\n          <thead v-if=\"getGridNumRows(component) > getGridNumCols(component)\">\n            <tr>\n              <th v-for=\"column in component.components\" :key=\"column.key\">{{ column.label }}</th>\n            </tr>\n          </thead>\n          <tbody v-if=\"getGridNumRows(component) > getGridNumCols(component)\">\n            <tr v-for=\"i in getGridNumRows(component)\" :key=\"i\">\n              <td v-for=\"column in component.components\" :key=\"column.key\">\n                <formio-container :components=\"[ column ]\" :data=\"getGridData(component, column, i - 1)\" :options=\"getOptions(options,{bordered: false})\" :parent=\"component\"/>\n              </td>\n            </tr>\n          </tbody>\n          <tbody v-else>\n            <tr v-for=\"column in component.components\" :key=\"column.key\">\n              <th>{{ column.label }}</th>\n              <td v-for=\"i in getGridNumRows(component)\" :key=\"i\">\n                <formio-container :components=\"[ column ]\" :data=\"getGridData(component, column, i - 1)\" :options=\"getOptions(options,{bordered: false})\" :parent=\"component\"/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n\n\n\n    </div>\n  </div> \n</template>\n\n<script>\nimport FormioUtils from 'formiojs/utils'\n\nexport default {\n  name: 'formio-container',\n  data () {\n    return {\n      skip: ['button']\n    }\n  },\n  props: [ 'components', 'data', 'options', 'parent' ],\n  methods: {\n    show (component) {\n      if (component.type == 'button' || component.type == 'hidden' || component.hidden) {\n        return false\n      }\n      return true\n    },\n    isInputComponent (component) {\n      return component.input && !component.tree\n    },\n    isGridComponent (component) {\n      return component.type === 'datagrid' || component.type === 'editgrid'\n    },\n    isTableComponent (component) {\n      return component.type === 'table'\n    },\n    isLayoutComponent (component) {\n      return FormioUtils.isLayoutComponent(component)\n    },\n    isContainer(component) {\n      return ['container', 'fieldset'].indexOf(component.type) >= 0\n    },\n    getValue (component, index) {\n      let value = this.data[component.key]\n      return (value && value.constructor === Array) ? value[index] : value\n    },\n    getData (component) {\n      if (component.key in this.data) {\n        return this.data[component.key]\n      }\n      return this.data\n    },\n    getGridData (parent, child, index) {\n      let data = {}\n      data[child.key] = this.data[parent.key][index][child.key]\n      return data\n    },\n    getGridNumRows (component) {\n      let rows = this.data[component.key] ? this.data[component.key].length : 0\n      return rows\n    },\n    getGridNumCols (component) {\n      let cols = component.components ? component.components.length : 0\n      return cols\n    },\n    getPanelClass (component) {\n      if (component.type === 'panel') {\n        return 'panel-'.concat(component.theme || 'default')\n      }\n      return ''\n    },\n    getOptions (options = {bordered: true}, obj = {}) {\n      if (Object.keys(obj).length === 0) {\n        return options\n      }\n      for (let key in obj) {\n        options[key] = obj[key]\n      }\n      return options\n    },\n    debug (obj, key = 'DEBUG-MSG') {\n      console.log(key, obj)\n    }\n  },\n  computed: {\n  }\n}\n</script>\n\n<style lang=\"scss\">\ntable {\n  font-size: 10px;\n}\n\ndiv.panel {\n  overflow: hidden;\n}\n\nlabel {\n  font-size: 10px;\n}\n\n</style>\n"]}]}