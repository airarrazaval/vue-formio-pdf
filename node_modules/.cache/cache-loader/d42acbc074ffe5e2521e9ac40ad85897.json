{"remainingRequest":"/home/alfredo/Code/vue-formio-pdf/node_modules/babel-loader/lib/index.js!/home/alfredo/Code/vue-formio-pdf/node_modules/vue-loader/lib/selector.js?type=script&index=0!/home/alfredo/Code/vue-formio-pdf/src/components/Render/components/DataGridComponent.vue","dependencies":[{"path":"/home/alfredo/Code/vue-formio-pdf/src/components/Render/components/DataGridComponent.vue","mtime":1521844365166},{"path":"/home/alfredo/Code/vue-formio-pdf/package.json","mtime":1521932240841},{"path":"/home/alfredo/Code/vue-formio-pdf/node_modules/cache-loader/dist/cjs.js","mtime":1521810301903},{"path":"/home/alfredo/Code/vue-formio-pdf/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/home/alfredo/Code/vue-formio-pdf/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Render from '@/components/Render/Render.vue';\nexport default {\n  name: 'DataGridComponent',\n  components: {\n    Render: Render\n  },\n  data: function data() {\n    return {\n      max: 5\n    };\n  },\n  methods: {\n    getRowData: function getRowData(column, index) {\n      var data = {};\n      data[column.key] = this.data[index];\n      return data;\n    }\n  },\n  props: ['component', 'data'],\n  computed: {\n    cols: function cols() {\n      console.log('cols', Object.keys(this.data[0]).length);\n      return Object.keys(this.data[0]).length;\n    },\n    rows: function rows() {\n      console.log('rows', this.data.length);\n      return this.data.length;\n    },\n    transpose: function transpose() {\n      console.log(this.data);\n      return this.cols > this.rows && this.cols > this.max;\n    }\n  }\n};",{"version":3,"sources":["DataGridComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AAEA;QAEA;;AAEA,AACA;AAFA;wBAGA;;WAEA,AACA;AAFA;AAGA;;mDAEA;iBACA;mCACA;aACA;AACA,AACA;AANA;uBAOA;;0BAEA;oDACA;uCACA;AACA;0BACA;oCACA;uBACA;AACA;oCACA;uBACA;uDACA;AACA,AACA;AAbA;AAlBA","sourceRoot":"src/components/Render/components","sourcesContent":["<template>\n  <div>\n    <h3 v-if=\"!!component.label\">{{ component.label }}</h3>\n    <table class=\"table table-striped\" v-if=\"!transpose\">\n      <thead>\n        <tr>\n          <th v-for=\"column in component.components\" :key=\"column.key\">{{ column.label }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"row in data\" :key=\"row\">\n          <td v-for=\"(value, key) in row\" :key=\"key\">\n            <Render :components=\"component.components\" :data=\"{ key: value }\" />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <table class=\"table table-striped\" v-else>\n      <tbody>\n        <tr v-for=\"column in component.components\" :key=\"column.key\">\n          <th>{{ column.label || '' }}</th>\n          <td v-for=\"i in rows\" :key=\"i\">\n            <Render :components=\"[column]\" :data=\"getRowData(column.key, i - 1)\" />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  \n</template>\n\n<script>\nimport Render from '@/components/Render/Render.vue'\n\nexport default {\n  name: 'DataGridComponent',\n  components: {\n    Render\n  },\n  data() {\n    return {\n      max: 5\n    };\n  },\n  methods: {\n    getRowData (column, index) {\n      let data = {}\n      data[column.key] = this.data[index]\n      return data\n    }\n  },\n  props: [ 'component', 'data' ],\n  computed: {\n    cols () {\n      console.log('cols', Object.keys(this.data[0]).length)\n      return Object.keys(this.data[0]).length\n    },\n    rows () {\n      console.log('rows', this.data.length)\n      return this.data.length\n    },\n    transpose: function () {\n      console.log(this.data)\n      return (this.cols > this.rows && this.cols > this.max)\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n"]}]}