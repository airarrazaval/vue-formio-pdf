{"remainingRequest":"/home/alfredo/Code/vue-formio-pdf/node_modules/babel-loader/lib/index.js!/home/alfredo/Code/vue-formio-pdf/node_modules/eslint-loader/index.js??ref--18-0!/home/alfredo/Code/vue-formio-pdf/src/utils/parser/index.js","dependencies":[{"path":"/home/alfredo/Code/vue-formio-pdf/src/utils/parser/index.js","mtime":1521810002203},{"path":"/home/alfredo/Code/vue-formio-pdf/package.json","mtime":1521791484356},{"path":"/home/alfredo/Code/vue-formio-pdf/node_modules/cache-loader/dist/cjs.js","mtime":1521810301903},{"path":"/home/alfredo/Code/vue-formio-pdf/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/home/alfredo/Code/vue-formio-pdf/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import FormioUtils from 'formiojs/utils';\nvar parser = {\n  methods: {\n    getComponent: function getComponent(components, key) {\n      return FormioUtils.getComponent(components, key);\n    },\n    combine: function combine(components, data) {\n      var combined = {};\n\n      for (var key in data) {\n        var component = this.getComponent(components, key);\n        var obj = {\n          'type': component.type,\n          'label': component.label,\n          'hidden': component.hidden,\n          'suffix': component.suffix,\n          'prefix': component.prefix\n        };\n\n        if (['datagrid', 'editgrid'].indexOf(component.type) !== -1) {\n          obj = this.combine(component.components, data[key]);\n        } else {\n          obj.value = data[key];\n        }\n\n        combined[key] = obj;\n      }\n\n      return combined;\n    }\n  }\n};\nexport default parser;",{"version":3,"sources":["src/utils/parser/index.js"],"names":["FormioUtils","parser","methods","getComponent","components","key","combine","data","combined","component","obj","type","label","hidden","suffix","prefix","indexOf","value"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,IAAMC,SAAS;AACbC,WAAS;AACPC,gBADO,wBACOC,UADP,EACmBC,GADnB,EACwB;AAC7B,aAAOL,YAAYG,YAAZ,CAAyBC,UAAzB,EAAqCC,GAArC,CAAP;AACD,KAHM;AAIPC,WAJO,mBAIEF,UAJF,EAIcG,IAJd,EAIoB;AACzB,UAAIC,WAAW,EAAf;;AACA,WAAK,IAAIH,GAAT,IAAgBE,IAAhB,EAAsB;AACpB,YAAIE,YAAY,KAAKN,YAAL,CAAkBC,UAAlB,EAA8BC,GAA9B,CAAhB;AACA,YAAIK,MAAM;AACR,kBAAQD,UAAUE,IADV;AAER,mBAASF,UAAUG,KAFX;AAGR,oBAAUH,UAAUI,MAHZ;AAIR,oBAAUJ,UAAUK,MAJZ;AAKR,oBAAUL,UAAUM;AALZ,SAAV;;AAQA,YAAI,CAAC,UAAD,EAAY,UAAZ,EAAwBC,OAAxB,CAAgCP,UAAUE,IAA1C,MAAoD,CAAC,CAAzD,EAA4D;AAC1DD,gBAAM,KAAKJ,OAAL,CAAaG,UAAUL,UAAvB,EAAmCG,KAAKF,GAAL,CAAnC,CAAN;AACD,SAFD,MAEO;AACLK,cAAIO,KAAJ,GAAYV,KAAKF,GAAL,CAAZ;AACD;;AACDG,iBAASH,GAAT,IAAgBK,GAAhB;AACD;;AACD,aAAOF,QAAP;AACD;AAxBM;AADI,CAAf;AA6BA,eAAeP,MAAf","sourceRoot":"/home/alfredo/Code/vue-formio-pdf","sourcesContent":["import FormioUtils from 'formiojs/utils'\n\nconst parser = {\n  methods: {\n    getComponent (components, key) {\n      return FormioUtils.getComponent(components, key)\n    },\n    combine (components, data) {\n      let combined = {}\n      for (let key in data) {\n        let component = this.getComponent(components, key)\n        let obj = {\n          'type': component.type,\n          'label': component.label,\n          'hidden': component.hidden,\n          'suffix': component.suffix,\n          'prefix': component.prefix\n        }\n\n        if (['datagrid','editgrid'].indexOf(component.type) !== -1) {\n          obj = this.combine(component.components, data[key])\n        } else {\n          obj.value = data[key]\n        }\n        combined[key] = obj\n      }\n      return combined\n    }\n  }\n}\n\nexport default parser"]}]}